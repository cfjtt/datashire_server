<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.eurlanda.datashire.server.dao.NormalizerSquidDao" >
  <!--<resultMap id="BaseResultMap" type="com.eurlanda.datashire.server.model.NormalizerSquid" >-->
    <!--<id column="ID" property="id" jdbcType="INTEGER" />-->
    <!--<result column="REFERENCE_SQUID_ID" property="reference_squid_id" jdbcType="INTEGER" />-->
    <!--<result column="RELATIVE_ORDER" property="relative_order" jdbcType="VARCHAR" />-->
  <!--</resultMap>-->

  <select id="getNormalizer" resultType="java.util.Map" parameterType="java.util.Map" >
    select dq.id,concat_ws('/',dsr.name,dp.name,dsf.name,dq.name) as name,
    (select output_data_type from ds_transformation where id=dtl.from_transformation_id) inputdatatype,dq.squid_type_id from ds_squid dq
    inner join ds_squid_flow dsf on dq.squid_flow_id=dsf.id and dq.squid_type_id in (67) <if test="map.isFilter==true">AND dq.method=0</if>
    inner join ds_project dp on dsf.project_id=dp.id inner join ds_sys_repository dsr on dsr.id=dp.repository_id
    inner join ds_transformation dt on dq.id=dt.squid_id and dt.transformation_type_id=70
    inner join ds_transformation_link dtl on dt.id=dtl.to_transformation_id where dp.repository_id=#{map.RepositoryId,jdbcType=INTEGER} and dq.id not in
    <foreach collection="map.ids" item="item" index="index" open="(" separator="," close=")" >
      #{item}
    </foreach>
    <if test="map.isFilter==true">
      and dp.id=#{map.projectId}
    </if>
    order by dsr.name,dp.id,dsf.id,dq.id
  </select>

  <insert id="insertNormalizerSquid" keyProperty="id" useGeneratedKeys="true" parameterType="com.eurlanda.datashire.server.model.NormalizerSquid" >
    insert into ds_squid (name,description,method,versioning,
    min_value,max_value,SQUID_FLOW_ID,SQUID_TYPE_ID,LOCATION_X,LOCATION_Y,SQUID_HEIGHT,SQUID_WIDTH)
    values
    (#{name,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{method,jdbcType=INTEGER},#{versioning,jdbcType=INTEGER},#{min_value,jdbcType=DOUBLE},#{max_value,jdbcType=DOUBLE},
    #{squidflow_id,jdbcType=VARCHAR},#{squid_type,jdbcType=VARCHAR},#{location_x,jdbcType=INTEGER},#{location_y,jdbcType=INTEGER},#{squid_height,jdbcType=INTEGER},#{squid_width,jdbcType=INTEGER}
    )
  </insert>

  <update id="updateNormalizerSquid" parameterType="com.eurlanda.datashire.server.model.NormalizerSquid" >
    update ds_squid
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="method != null" >
        method = #{method,jdbcType=INTEGER},
      </if>
      <if test="min_value != null" >
        min_value = #{min_value,jdbcType=DOUBLE},
      </if>
      <if test="max_value != null" >
        max_value = #{max_value,jdbcType=DOUBLE},
      </if>

      <if test="versioning != null" >
        versioning = #{versioning,jdbcType=DOUBLE},
      </if>

      <if test="location_x != null" >
        location_x = #{location_x,jdbcType=INTEGER},
      </if>
      <if test="location_y != null" >
        location_y = #{location_y,jdbcType=INTEGER},
      </if>
      <if test="squid_height != null" >
        squid_height= #{squid_height,jdbcType=INTEGER},
      </if>
      <if test="squid_width != null" >
        squid_width = #{squid_width,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>

  <select id="findTransformationType" resultType="java.util.Map">
    select * from ds_transformation_type where id=#{id}
  </select>

  <select id="findSquidBySquidId" resultType="java.util.Map">
    select id,squid_type_id,name from ds_squid where id = #{id}
  </select>
</mapper>